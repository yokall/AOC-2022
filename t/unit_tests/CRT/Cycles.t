#!/usr/bin/perl

use strict;
use warnings;

use Test2::V0;

use lib 'lib';

use CRT::Cycles;

subtest 'model' => sub {
    subtest
        'should return an array where each element represents a cycle and any change to the X register'
        => sub {
        my $instructions = [
            'addx 15',  'addx -11', 'addx 6',   'addx -3',
            'addx 5',   'addx -1',  'addx -8',  'addx 13',
            'addx 4',   'noop',     'addx -1',  'addx 5',
            'addx -1',  'addx 5',   'addx -1',  'addx 5',
            'addx -1',  'addx 5',   'addx -1',  'addx -35',
            'addx 1',   'addx 24',  'addx -19', 'addx 1',
            'addx 16',  'addx -11', 'noop',     'noop',
            'addx 21',  'addx -15', 'noop',     'noop',
            'addx -3',  'addx 9',   'addx 1',   'addx -3',
            'addx 8',   'addx 1',   'addx 5',   'noop',
            'noop',     'noop',     'noop',     'noop',
            'addx -36', 'noop',     'addx 1',   'addx 7',
            'noop',     'noop',     'noop',     'addx 2',
            'addx 6',   'noop',     'noop',     'noop',
            'noop',     'noop',     'addx 1',   'noop',
            'noop',     'addx 7',   'addx 1',   'noop',
            'addx -13', 'addx 13',  'addx 7',   'noop',
            'addx 1',   'addx -33', 'noop',     'noop',
            'noop',     'addx 2',   'noop',     'noop',
            'noop',     'addx 8',   'noop',     'addx -1',
            'addx 2',   'addx 1',   'noop',     'addx 17',
            'addx -9',  'addx 1',   'addx 1',   'addx -3',
            'addx 11',  'noop',     'noop',     'addx 1',
            'noop',     'addx 1',   'noop',     'noop',
            'addx -13', 'addx -19', 'addx 1',   'addx 3',
            'addx 26',  'addx -30', 'addx 12',  'addx -1',
            'addx 3',   'addx 1',   'noop',     'noop',
            'noop',     'addx -9',  'addx 18',  'addx 1',
            'addx 2',   'noop',     'noop',     'addx 9',
            'noop',     'noop',     'noop',     'addx -1',
            'addx 2',   'addx -37', 'addx 1',   'addx 3',
            'noop',     'addx 15',  'addx -21', 'addx 22',
            'addx -6',  'addx 1',   'noop',     'addx 2',
            'addx 1',   'noop',     'addx -10', 'noop',
            'noop',     'addx 20',  'addx 1',   'addx 2',
            'addx 2',   'addx -6',  'addx -11', 'noop',
            'noop',     'noop',
        ];

        my $actual = CRT::Cycles::model($instructions);

        my $expected = [
            0,   0,  15,  0,   -11, 0,   6, 0,   -3,  0,   5,  0,
            -1,  0,  -8,  0,   13,  0,   4, 0,   0,   -1,  0,  5,
            0,   -1, 0,   5,   0,   -1,  0, 5,   0,   -1,  0,  5,
            0,   -1, 0,   -35, 0,   1,   0, 24,  0,   -19, 0,  1,
            0,   16, 0,   -11, 0,   0,   0, 21,  0,   -15, 0,  0,
            0,   -3, 0,   9,   0,   1,   0, -3,  0,   8,   0,  1,
            0,   5,  0,   0,   0,   0,   0, 0,   -36, 0,   0,  1,
            0,   7,  0,   0,   0,   0,   2, 0,   6,   0,   0,  0,
            0,   0,  0,   1,   0,   0,   0, 7,   0,   1,   0,  0,
            -13, 0,  13,  0,   7,   0,   0, 1,   0,   -33, 0,  0,
            0,   0,  2,   0,   0,   0,   0, 8,   0,   0,   -1, 0,
            2,   0,  1,   0,   0,   17,  0, -9,  0,   1,   0,  1,
            0,   -3, 0,   11,  0,   0,   0, 1,   0,   0,   1,  0,
            0,   0,  -13, 0,   -19, 0,   1, 0,   3,   0,   26, 0,
            -30, 0,  12,  0,   -1,  0,   3, 0,   1,   0,   0,  0,
            0,   -9, 0,   18,  0,   1,   0, 2,   0,   0,   0,  9,
            0,   0,  0,   0,   -1,  0,   2, 0,   -37, 0,   1,  0,
            3,   0,  0,   15,  0,   -21, 0, 22,  0,   -6,  0,  1,
            0,   0,  2,   0,   1,   0,   0, -10, 0,   0,   0,  20,
            0,   1,  0,   2,   0,   2,   0, -6,  0,   -11, 0,  0,
            0,
        ];

        is( $actual, $expected, 'description' );
        };
};

subtest 'get_value_at_cycle' => sub {
    my $cycles = [
        0,   0,  15,  0,   -11, 0,   6, 0,   -3,  0,   5,  0,
        -1,  0,  -8,  0,   13,  0,   4, 0,   0,   -1,  0,  5,
        0,   -1, 0,   5,   0,   -1,  0, 5,   0,   -1,  0,  5,
        0,   -1, 0,   -35, 0,   1,   0, 24,  0,   -19, 0,  1,
        0,   16, 0,   -11, 0,   0,   0, 21,  0,   -15, 0,  0,
        0,   -3, 0,   9,   0,   1,   0, -3,  0,   8,   0,  1,
        0,   5,  0,   0,   0,   0,   0, 0,   -36, 0,   0,  1,
        0,   7,  0,   0,   0,   0,   2, 0,   6,   0,   0,  0,
        0,   0,  0,   1,   0,   0,   0, 7,   0,   1,   0,  0,
        -13, 0,  13,  0,   7,   0,   0, 1,   0,   -33, 0,  0,
        0,   0,  2,   0,   0,   0,   0, 8,   0,   0,   -1, 0,
        2,   0,  1,   0,   0,   17,  0, -9,  0,   1,   0,  1,
        0,   -3, 0,   11,  0,   0,   0, 1,   0,   0,   1,  0,
        0,   0,  -13, 0,   -19, 0,   1, 0,   3,   0,   26, 0,
        -30, 0,  12,  0,   -1,  0,   3, 0,   1,   0,   0,  0,
        0,   -9, 0,   18,  0,   1,   0, 2,   0,   0,   0,  9,
        0,   0,  0,   0,   -1,  0,   2, 0,   -37, 0,   1,  0,
        3,   0,  0,   15,  0,   -21, 0, 22,  0,   -6,  0,  1,
        0,   0,  2,   0,   1,   0,   0, -10, 0,   0,   0,  20,
        0,   1,  0,   2,   0,   2,   0, -6,  0,   -11, 0,  0,
        0,
    ];

    my $twenty = CRT::Cycles::get_value_at_cycle( $cycles, 20 );

    is( $twenty, 420 );
};

subtest 'get_values_for_all_cycles' => sub {
    my $cycles = [
        0,   0,  15,  0,   -11, 0,   6, 0,   -3,  0,   5,  0,
        -1,  0,  -8,  0,   13,  0,   4, 0,   0,   -1,  0,  5,
        0,   -1, 0,   5,   0,   -1,  0, 5,   0,   -1,  0,  5,
        0,   -1, 0,   -35, 0,   1,   0, 24,  0,   -19, 0,  1,
        0,   16, 0,   -11, 0,   0,   0, 21,  0,   -15, 0,  0,
        0,   -3, 0,   9,   0,   1,   0, -3,  0,   8,   0,  1,
        0,   5,  0,   0,   0,   0,   0, 0,   -36, 0,   0,  1,
        0,   7,  0,   0,   0,   0,   2, 0,   6,   0,   0,  0,
        0,   0,  0,   1,   0,   0,   0, 7,   0,   1,   0,  0,
        -13, 0,  13,  0,   7,   0,   0, 1,   0,   -33, 0,  0,
        0,   0,  2,   0,   0,   0,   0, 8,   0,   0,   -1, 0,
        2,   0,  1,   0,   0,   17,  0, -9,  0,   1,   0,  1,
        0,   -3, 0,   11,  0,   0,   0, 1,   0,   0,   1,  0,
        0,   0,  -13, 0,   -19, 0,   1, 0,   3,   0,   26, 0,
        -30, 0,  12,  0,   -1,  0,   3, 0,   1,   0,   0,  0,
        0,   -9, 0,   18,  0,   1,   0, 2,   0,   0,   0,  9,
        0,   0,  0,   0,   -1,  0,   2, 0,   -37, 0,   1,  0,
        3,   0,  0,   15,  0,   -21, 0, 22,  0,   -6,  0,  1,
        0,   0,  2,   0,   1,   0,   0, -10, 0,   0,   0,  20,
        0,   1,  0,   2,   0,   2,   0, -6,  0,   -11, 0,  0,
        0,
    ];

    my $actual = CRT::Cycles::get_values_for_all_cycles($cycles);

    my $expected = [
        1,  1,  1,  16, 16, 5,  5,  11, 11, 8,  8,  13, 13, 12, 12, 4,
        4,  17, 17, 21, 21, 21, 20, 20, 25, 25, 24, 24, 29, 29, 28, 28,
        33, 33, 32, 32, 37, 37, 36, 36, 1,  1,  2,  2,  26, 26, 7,  7,
        8,  8,  24, 24, 13, 13, 13, 13, 34, 34, 19, 19, 19, 19, 16, 16,
        25, 25, 26, 26, 23, 23, 31, 31, 32, 32, 37, 37, 37, 37, 37, 37,
        37, 1,  1,  1,  2,  2,  9,  9,  9,  9,  9,  11, 11, 17, 17, 17,
        17, 17, 17, 17, 18, 18, 18, 18, 25, 25, 26, 26, 26, 13, 13, 26,
        26, 33, 33, 33, 34, 34, 1,  1,  1,  1,  1,  3,  3,  3,  3,  3,
        11, 11, 11, 10, 10, 12, 12, 13, 13, 13, 30, 30, 21, 21, 22, 22,
        23, 23, 20, 20, 31, 31, 31, 31, 32, 32, 32, 33, 33, 33, 33, 20,
        20, 1,  1,  2,  2,  5,  5,  31, 31, 1,  1,  13, 13, 12, 12, 15,
        15, 16, 16, 16, 16, 16, 7,  7,  25, 25, 26, 26, 28, 28, 28, 28,
        37, 37, 37, 37, 37, 36, 36, 38, 38, 1,  1,  2,  2,  5,  5,  5,
        20, 20, -1, -1, 21, 21, 15, 15, 16, 16, 16, 18, 18, 19, 19, 19,
        9,  9,  9,  9,  29, 29, 30, 30, 32, 32, 34, 34, 28, 28, 17, 17,
        17, 17
    ];

    is( $actual, $expected );
};

done_testing();
